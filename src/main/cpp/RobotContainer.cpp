// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: RobotContainer.

#include "RobotContainer.h"
#include <frc2/command/ParallelRaceGroup.h>
#include <frc/smartdashboard/SmartDashboard.h>



RobotContainer* RobotContainer::m_robotContainer = NULL;

RobotContainer::RobotContainer() : m_autonomousCommand(
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
){

            

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=SMARTDASHBOARD
    // Smartdashboard Subsystems


    // SmartDashboard Buttons
    frc::SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());
    frc::SmartDashboard::PutData("Drive", new Drive( &m_driveTrain ));
    frc::SmartDashboard::PutData("AutoAim", new AutoAim( &m_driveTrain ));
    frc::SmartDashboard::PutData("IntakeDeploy", new IntakeDeploy( &m_intake ));
    frc::SmartDashboard::PutData("HoodLowGoal", new HoodLowGoal( &m_shooter ));
    frc::SmartDashboard::PutData("HoodHighGoal", new HoodHighGoal( &m_shooter ));
    frc::SmartDashboard::PutData("LowGear", new LowGear( &m_driveTrain ));
    frc::SmartDashboard::PutData("HighGear", new HighGear( &m_driveTrain ));
    frc::SmartDashboard::PutData("Climb", new Climb( &m_climber ));
    frc::SmartDashboard::PutData("IntakeRetract", new IntakeRetract( &m_intake ));
    frc::SmartDashboard::PutData("ShootHigh", new ShootHigh( &m_shooter ));
    frc::SmartDashboard::PutData("ShootLow", new ShootLow( &m_shooter ));

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=SMARTDASHBOARD

    ConfigureButtonBindings();

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT-COMMANDS
m_driveTrain.SetDefaultCommand(Drive( &m_driveTrain ));

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT-COMMANDS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=AUTONOMOUS


    m_chooser.SetDefaultOption("Autonomous Command", new AutonomousCommand());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=AUTONOMOUS

    frc::SmartDashboard::PutData("Auto Mode", &m_chooser);

}

RobotContainer* RobotContainer::GetInstance() {
    if (m_robotContainer == NULL) {
        m_robotContainer = new RobotContainer();
    }
    return(m_robotContainer);
}

void RobotContainer::ConfigureButtonBindings() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=BUTTONS

frc2::JoystickButton m_driver_Btn5_LB{&m_driver, 5};
frc2::JoystickButton m_driver_Btn6_RB{&m_driver, 6};
frc2::JoystickButton m_driver_Btn2_A{&m_driver, 2};
frc2::JoystickButton m_driver_Btn3_B{&m_driver, 3};
frc2::JoystickButton m_driver_Btn8_RT{&m_driver, 8};
frc2::JoystickButton m_driver_Btn7_LT{&m_driver, 7};
frc2::JoystickButton m_driver_Btn1_X{&m_driver, 1};

m_driver_Btn5_LB.WhenPressed(LowGear( &m_driveTrain ), true);
m_driver_Btn6_RB.WhenPressed(HighGear( &m_driveTrain ), true);
m_driver_Btn2_A.WhenPressed(IntakeDeploy( &m_intake ), true);
m_driver_Btn3_B.WhenPressed(IntakeRetract( &m_intake ), true);
m_driver_Btn8_RT.WhileHeld(ShootHigh( &m_shooter ), true);
m_driver_Btn7_LT.WhileHeld(ShootLow( &m_shooter ), true);
m_driver_Btn1_X.WhenPressed(Climb( &m_climber ), true);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=BUTTONS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

frc::Joystick* RobotContainer::getOperator() {
   return &m_operator;
}
frc::Joystick* RobotContainer::getDriver() {
   return &m_driver;
}

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS


frc2::Command* RobotContainer::GetAutonomousCommand() {
  // The selected command will be run in autonomous
  return m_chooser.GetSelected();
}